/*
* generated by Xtext
*/

package org.xtext.lrm.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class MultiplosdestinosGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class ModeloRoboElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ModeloRobo");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPlataformaAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cPlataformaPlataformaParserRuleCall_0_0 = (RuleCall)cPlataformaAssignment_0.eContents().get(0);
		private final Keyword cRoboKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Assignment cCabecalhoAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cCabecalhoCabecalhoParserRuleCall_3_0 = (RuleCall)cCabecalhoAssignment_3.eContents().get(0);
		private final Assignment cPacoteAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cPacotePacoteParserRuleCall_4_0 = (RuleCall)cPacoteAssignment_4.eContents().get(0);
		private final Assignment cSensorAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cSensorSensorParserRuleCall_5_0 = (RuleCall)cSensorAssignment_5.eContents().get(0);
		private final Assignment cMainAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cMainMainParserRuleCall_6_0 = (RuleCall)cMainAssignment_6.eContents().get(0);
		
		//ModeloRobo:
		//	plataforma+=Plataforma "robo" name=ID cabecalho+=Cabecalho* pacote+=Pacote* sensor+=Sensor* main+=Main;
		public ParserRule getRule() { return rule; }

		//plataforma+=Plataforma "robo" name=ID cabecalho+=Cabecalho* pacote+=Pacote* sensor+=Sensor* main+=Main
		public Group getGroup() { return cGroup; }

		//plataforma+=Plataforma
		public Assignment getPlataformaAssignment_0() { return cPlataformaAssignment_0; }

		//Plataforma
		public RuleCall getPlataformaPlataformaParserRuleCall_0_0() { return cPlataformaPlataformaParserRuleCall_0_0; }

		//"robo"
		public Keyword getRoboKeyword_1() { return cRoboKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//cabecalho+=Cabecalho*
		public Assignment getCabecalhoAssignment_3() { return cCabecalhoAssignment_3; }

		//Cabecalho
		public RuleCall getCabecalhoCabecalhoParserRuleCall_3_0() { return cCabecalhoCabecalhoParserRuleCall_3_0; }

		//pacote+=Pacote*
		public Assignment getPacoteAssignment_4() { return cPacoteAssignment_4; }

		//Pacote
		public RuleCall getPacotePacoteParserRuleCall_4_0() { return cPacotePacoteParserRuleCall_4_0; }

		//sensor+=Sensor*
		public Assignment getSensorAssignment_5() { return cSensorAssignment_5; }

		//Sensor
		public RuleCall getSensorSensorParserRuleCall_5_0() { return cSensorSensorParserRuleCall_5_0; }

		//main+=Main
		public Assignment getMainAssignment_6() { return cMainAssignment_6; }

		//Main
		public RuleCall getMainMainParserRuleCall_6_0() { return cMainMainParserRuleCall_6_0; }
	}

	public class PlataformaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Plataforma");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPlataformaKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cNomeDaPlataformaParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//Plataforma:
		//	"plataforma" nomeDaPlataforma;
		public ParserRule getRule() { return rule; }

		//"plataforma" nomeDaPlataforma
		public Group getGroup() { return cGroup; }

		//"plataforma"
		public Keyword getPlataformaKeyword_0() { return cPlataformaKeyword_0; }

		//nomeDaPlataforma
		public RuleCall getNomeDaPlataformaParserRuleCall_1() { return cNomeDaPlataformaParserRuleCall_1; }
	}

	public class NomeDaPlataformaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nomeDaPlataforma");
		private final Assignment cPlatAssignment = (Assignment)rule.eContents().get(1);
		private final Alternatives cPlatAlternatives_0 = (Alternatives)cPlatAssignment.eContents().get(0);
		private final Keyword cPlatPionnerKeyword_0_0 = (Keyword)cPlatAlternatives_0.eContents().get(0);
		private final Keyword cPlatSrvKeyword_0_1 = (Keyword)cPlatAlternatives_0.eContents().get(1);
		private final Keyword cPlatGolfeKeyword_0_2 = (Keyword)cPlatAlternatives_0.eContents().get(2);
		
		//nomeDaPlataforma:
		//	plat=("pionner" | "srv" | "golfe");
		public ParserRule getRule() { return rule; }

		//plat=("pionner" | "srv" | "golfe")
		public Assignment getPlatAssignment() { return cPlatAssignment; }

		//"pionner" | "srv" | "golfe"
		public Alternatives getPlatAlternatives_0() { return cPlatAlternatives_0; }

		//"pionner"
		public Keyword getPlatPionnerKeyword_0_0() { return cPlatPionnerKeyword_0_0; }

		//"srv"
		public Keyword getPlatSrvKeyword_0_1() { return cPlatSrvKeyword_0_1; }

		//"golfe"
		public Keyword getPlatGolfeKeyword_0_2() { return cPlatGolfeKeyword_0_2; }
	}

	public class CabecalhoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Cabecalho");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAdicionarKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cItensCabecalhoAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Alternatives cItensCabecalhoAlternatives_1_0 = (Alternatives)cItensCabecalhoAssignment_1.eContents().get(0);
		private final Keyword cItensCabecalhoDefinesKeyword_1_0_0 = (Keyword)cItensCabecalhoAlternatives_1_0.eContents().get(0);
		private final Keyword cItensCabecalhoIncludesKeyword_1_0_1 = (Keyword)cItensCabecalhoAlternatives_1_0.eContents().get(1);
		
		//Cabecalho:
		//	"adicionar" itensCabecalho=("defines" | "includes");
		public ParserRule getRule() { return rule; }

		//"adicionar" itensCabecalho=("defines" | "includes")
		public Group getGroup() { return cGroup; }

		//"adicionar"
		public Keyword getAdicionarKeyword_0() { return cAdicionarKeyword_0; }

		//itensCabecalho=("defines" | "includes")
		public Assignment getItensCabecalhoAssignment_1() { return cItensCabecalhoAssignment_1; }

		//"defines" | "includes"
		public Alternatives getItensCabecalhoAlternatives_1_0() { return cItensCabecalhoAlternatives_1_0; }

		//"defines"
		public Keyword getItensCabecalhoDefinesKeyword_1_0_0() { return cItensCabecalhoDefinesKeyword_1_0_0; }

		//"includes"
		public Keyword getItensCabecalhoIncludesKeyword_1_0_1() { return cItensCabecalhoIncludesKeyword_1_0_1; }
	}

	public class PacoteElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Pacote");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cImportarPacoteKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cTipoAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Alternatives cTipoAlternatives_1_0 = (Alternatives)cTipoAssignment_1.eContents().get(0);
		private final Keyword cTipoPlayerKeyword_1_0_0 = (Keyword)cTipoAlternatives_1_0.eContents().get(0);
		private final Keyword cTipoLocalizacaoKeyword_1_0_1 = (Keyword)cTipoAlternatives_1_0.eContents().get(1);
		
		//Pacote:
		//	"importar pacote" tipo=("player;" | "localizacao;");
		public ParserRule getRule() { return rule; }

		//"importar pacote" tipo=("player;" | "localizacao;")
		public Group getGroup() { return cGroup; }

		//"importar pacote"
		public Keyword getImportarPacoteKeyword_0() { return cImportarPacoteKeyword_0; }

		//tipo=("player;" | "localizacao;")
		public Assignment getTipoAssignment_1() { return cTipoAssignment_1; }

		//"player;" | "localizacao;"
		public Alternatives getTipoAlternatives_1_0() { return cTipoAlternatives_1_0; }

		//"player;"
		public Keyword getTipoPlayerKeyword_1_0_0() { return cTipoPlayerKeyword_1_0_0; }

		//"localizacao;"
		public Keyword getTipoLocalizacaoKeyword_1_0_1() { return cTipoLocalizacaoKeyword_1_0_1; }
	}

	public class SensorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Sensor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCriarSensorKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cTipoSensorAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTipoSensorTipoSensorParserRuleCall_1_0 = (RuleCall)cTipoSensorAssignment_1.eContents().get(0);
		
		//Sensor:
		//	"criarSensor" tipoSensor=TipoSensor;
		public ParserRule getRule() { return rule; }

		//"criarSensor" tipoSensor=TipoSensor
		public Group getGroup() { return cGroup; }

		//"criarSensor"
		public Keyword getCriarSensorKeyword_0() { return cCriarSensorKeyword_0; }

		//tipoSensor=TipoSensor
		public Assignment getTipoSensorAssignment_1() { return cTipoSensorAssignment_1; }

		//TipoSensor
		public RuleCall getTipoSensorTipoSensorParserRuleCall_1_0() { return cTipoSensorTipoSensorParserRuleCall_1_0; }
	}

	public class TipoSensorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TipoSensor");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cGpsKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cBussolaKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cCameraKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		
		//TipoSensor returns ecore::EString:
		//	"gps" | "bussola" | "camera";
		public ParserRule getRule() { return rule; }

		//"gps" | "bussola" | "camera"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"gps"
		public Keyword getGpsKeyword_0() { return cGpsKeyword_0; }

		//"bussola"
		public Keyword getBussolaKeyword_1() { return cBussolaKeyword_1; }

		//"camera"
		public Keyword getCameraKeyword_2() { return cCameraKeyword_2; }
	}

	public class MainElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Main");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIntMainKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cLoopParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Main:
		//	"int main()" "{" loop "}";
		public ParserRule getRule() { return rule; }

		//"int main()" "{" loop "}"
		public Group getGroup() { return cGroup; }

		//"int main()"
		public Keyword getIntMainKeyword_0() { return cIntMainKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//loop
		public RuleCall getLoopParserRuleCall_2() { return cLoopParserRuleCall_2; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}

	public class LoopElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "loop");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIniSensorAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cIniSensorInicializacaoSensorParserRuleCall_0_0 = (RuleCall)cIniSensorAssignment_0.eContents().get(0);
		private final Assignment cWAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cWWhileParserRuleCall_1_0 = (RuleCall)cWAssignment_1.eContents().get(0);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Assignment cEnAssignment_2_0 = (Assignment)cAlternatives_2.eContents().get(0);
		private final RuleCall cEnEntradaParserRuleCall_2_0_0 = (RuleCall)cEnAssignment_2_0.eContents().get(0);
		private final Assignment cProcAssignment_2_1 = (Assignment)cAlternatives_2.eContents().get(1);
		private final RuleCall cProcProcessamentoParserRuleCall_2_1_0 = (RuleCall)cProcAssignment_2_1.eContents().get(0);
		private final Assignment cCompAssignment_2_2 = (Assignment)cAlternatives_2.eContents().get(2);
		private final RuleCall cCompComportamentoParserRuleCall_2_2_0 = (RuleCall)cCompAssignment_2_2.eContents().get(0);
		private final Assignment cAcAssignment_2_3 = (Assignment)cAlternatives_2.eContents().get(3);
		private final RuleCall cAcAcaoParserRuleCall_2_3_0 = (RuleCall)cAcAssignment_2_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//loop:
		//	iniSensor+=inicializacaoSensor* w+=while (en+=entrada | proc+=processamento | comp+=comportamento | ac+=acao)* "}";
		public ParserRule getRule() { return rule; }

		//iniSensor+=inicializacaoSensor* w+=while (en+=entrada | proc+=processamento | comp+=comportamento | ac+=acao)* "}"
		public Group getGroup() { return cGroup; }

		//iniSensor+=inicializacaoSensor*
		public Assignment getIniSensorAssignment_0() { return cIniSensorAssignment_0; }

		//inicializacaoSensor
		public RuleCall getIniSensorInicializacaoSensorParserRuleCall_0_0() { return cIniSensorInicializacaoSensorParserRuleCall_0_0; }

		//w+=while
		public Assignment getWAssignment_1() { return cWAssignment_1; }

		//while
		public RuleCall getWWhileParserRuleCall_1_0() { return cWWhileParserRuleCall_1_0; }

		//(en+=entrada | proc+=processamento | comp+=comportamento | ac+=acao)*
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//en+=entrada
		public Assignment getEnAssignment_2_0() { return cEnAssignment_2_0; }

		//entrada
		public RuleCall getEnEntradaParserRuleCall_2_0_0() { return cEnEntradaParserRuleCall_2_0_0; }

		//proc+=processamento
		public Assignment getProcAssignment_2_1() { return cProcAssignment_2_1; }

		//processamento
		public RuleCall getProcProcessamentoParserRuleCall_2_1_0() { return cProcProcessamentoParserRuleCall_2_1_0; }

		//comp+=comportamento
		public Assignment getCompAssignment_2_2() { return cCompAssignment_2_2; }

		//comportamento
		public RuleCall getCompComportamentoParserRuleCall_2_2_0() { return cCompComportamentoParserRuleCall_2_2_0; }

		//ac+=acao
		public Assignment getAcAssignment_2_3() { return cAcAssignment_2_3; }

		//acao
		public RuleCall getAcAcaoParserRuleCall_2_3_0() { return cAcAcaoParserRuleCall_2_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}

	public class WhileElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "while");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cWhileKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cTrueKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//while returns ecore::EString:
		//	"while" "(true)" "{";
		public ParserRule getRule() { return rule; }

		//"while" "(true)" "{"
		public Group getGroup() { return cGroup; }

		//"while"
		public Keyword getWhileKeyword_0() { return cWhileKeyword_0; }

		//"(true)"
		public Keyword getTrueKeyword_1() { return cTrueKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
	}

	public class InicializacaoSensorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "inicializacaoSensor");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cGpsLigarAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final Keyword cGpsLigarGpsLigarKeyword_0_0 = (Keyword)cGpsLigarAssignment_0.eContents().get(0);
		private final Assignment cBussolaLigarAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final Keyword cBussolaLigarBussolaLigarKeyword_1_0 = (Keyword)cBussolaLigarAssignment_1.eContents().get(0);
		private final Assignment cCameraLigarAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final Keyword cCameraLigarCameraLigarKeyword_2_0 = (Keyword)cCameraLigarAssignment_2.eContents().get(0);
		private final Assignment cCarregarListaCoordenadasAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final Keyword cCarregarListaCoordenadasCarregarListaCoordenadasKeyword_3_0 = (Keyword)cCarregarListaCoordenadasAssignment_3.eContents().get(0);
		private final Assignment cInicializarPlayerAssignment_4 = (Assignment)cAlternatives.eContents().get(4);
		private final Keyword cInicializarPlayerInicializarPlayerKeyword_4_0 = (Keyword)cInicializarPlayerAssignment_4.eContents().get(0);
		
		//inicializacaoSensor:
		//	gpsLigar="gps.ligar();" //(WS)*
		//	| bussolaLigar="bussola.ligar();" | cameraLigar="camera.ligar();" |
		//	carregarListaCoordenadas="carregarListaCoordenadas();" | inicializarPlayer="inicializarPlayer();";
		public ParserRule getRule() { return rule; }

		//gpsLigar="gps.ligar();" //(WS)*
		//| bussolaLigar="bussola.ligar();" | cameraLigar="camera.ligar();" |
		//carregarListaCoordenadas="carregarListaCoordenadas();" | inicializarPlayer="inicializarPlayer();"
		public Alternatives getAlternatives() { return cAlternatives; }

		//gpsLigar="gps.ligar();"
		public Assignment getGpsLigarAssignment_0() { return cGpsLigarAssignment_0; }

		//"gps.ligar();"
		public Keyword getGpsLigarGpsLigarKeyword_0_0() { return cGpsLigarGpsLigarKeyword_0_0; }

		//bussolaLigar="bussola.ligar();"
		public Assignment getBussolaLigarAssignment_1() { return cBussolaLigarAssignment_1; }

		//"bussola.ligar();"
		public Keyword getBussolaLigarBussolaLigarKeyword_1_0() { return cBussolaLigarBussolaLigarKeyword_1_0; }

		//cameraLigar="camera.ligar();"
		public Assignment getCameraLigarAssignment_2() { return cCameraLigarAssignment_2; }

		//"camera.ligar();"
		public Keyword getCameraLigarCameraLigarKeyword_2_0() { return cCameraLigarCameraLigarKeyword_2_0; }

		//carregarListaCoordenadas="carregarListaCoordenadas();"
		public Assignment getCarregarListaCoordenadasAssignment_3() { return cCarregarListaCoordenadasAssignment_3; }

		//"carregarListaCoordenadas();"
		public Keyword getCarregarListaCoordenadasCarregarListaCoordenadasKeyword_3_0() { return cCarregarListaCoordenadasCarregarListaCoordenadasKeyword_3_0; }

		//inicializarPlayer="inicializarPlayer();"
		public Assignment getInicializarPlayerAssignment_4() { return cInicializarPlayerAssignment_4; }

		//"inicializarPlayer();"
		public Keyword getInicializarPlayerInicializarPlayerKeyword_4_0() { return cInicializarPlayerInicializarPlayerKeyword_4_0; }
	}

	public class EntradaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "entrada");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cGpsLerAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final Keyword cGpsLerGpsLerKeyword_0_0 = (Keyword)cGpsLerAssignment_0.eContents().get(0);
		private final Assignment cBussolaLerAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final Keyword cBussolaLerBussolaLerKeyword_1_0 = (Keyword)cBussolaLerAssignment_1.eContents().get(0);
		private final Assignment cCameraLerAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final Keyword cCameraLerCameraLerKeyword_2_0 = (Keyword)cCameraLerAssignment_2.eContents().get(0);
		private final Assignment cReceberCoordenadaAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final Keyword cReceberCoordenadaReceberCoordenadaKeyword_3_0 = (Keyword)cReceberCoordenadaAssignment_3.eContents().get(0);
		private final Assignment cCarregarListaCoordenadasAssignment_4 = (Assignment)cAlternatives.eContents().get(4);
		private final Keyword cCarregarListaCoordenadasCarregarListaCoordenadasKeyword_4_0 = (Keyword)cCarregarListaCoordenadasAssignment_4.eContents().get(0);
		
		//// ******************************************* /
		//// ***MAIN->ENTRADA************************** /
		//// ***************************************** /
		//entrada:
		//	gpsLer="gps.ler();" | bussolaLer="bussola.ler();" | cameraLer="camera.ler();" |
		//	receberCoordenada="receberCoordenada();" | carregarListaCoordenadas="carregarListaCoordenadas();";
		public ParserRule getRule() { return rule; }

		//gpsLer="gps.ler();" | bussolaLer="bussola.ler();" | cameraLer="camera.ler();" | receberCoordenada="receberCoordenada();"
		//| carregarListaCoordenadas="carregarListaCoordenadas();"
		public Alternatives getAlternatives() { return cAlternatives; }

		//gpsLer="gps.ler();"
		public Assignment getGpsLerAssignment_0() { return cGpsLerAssignment_0; }

		//"gps.ler();"
		public Keyword getGpsLerGpsLerKeyword_0_0() { return cGpsLerGpsLerKeyword_0_0; }

		//bussolaLer="bussola.ler();"
		public Assignment getBussolaLerAssignment_1() { return cBussolaLerAssignment_1; }

		//"bussola.ler();"
		public Keyword getBussolaLerBussolaLerKeyword_1_0() { return cBussolaLerBussolaLerKeyword_1_0; }

		//cameraLer="camera.ler();"
		public Assignment getCameraLerAssignment_2() { return cCameraLerAssignment_2; }

		//"camera.ler();"
		public Keyword getCameraLerCameraLerKeyword_2_0() { return cCameraLerCameraLerKeyword_2_0; }

		//receberCoordenada="receberCoordenada();"
		public Assignment getReceberCoordenadaAssignment_3() { return cReceberCoordenadaAssignment_3; }

		//"receberCoordenada();"
		public Keyword getReceberCoordenadaReceberCoordenadaKeyword_3_0() { return cReceberCoordenadaReceberCoordenadaKeyword_3_0; }

		//carregarListaCoordenadas="carregarListaCoordenadas();"
		public Assignment getCarregarListaCoordenadasAssignment_4() { return cCarregarListaCoordenadasAssignment_4; }

		//"carregarListaCoordenadas();"
		public Keyword getCarregarListaCoordenadasCarregarListaCoordenadasKeyword_4_0() { return cCarregarListaCoordenadasCarregarListaCoordenadasKeyword_4_0; }
	}

	public class ProcessamentoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "processamento");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cProcessaInfoAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final Keyword cProcessaInfoProcessaInfoKeyword_0_0 = (Keyword)cProcessaInfoAssignment_0.eContents().get(0);
		private final Assignment cProcessaImagemAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final Keyword cProcessaImagemProcessaImagemKeyword_1_0 = (Keyword)cProcessaImagemAssignment_1.eContents().get(0);
		
		//// ******************************************* /
		//// ***MAIN->PROCESSAMENTO******************** /
		//// ***************************************** /
		//processamento:
		//	processaInfo="processaInfo();" | processaImagem="processaImagem();";
		public ParserRule getRule() { return rule; }

		//processaInfo="processaInfo();" | processaImagem="processaImagem();"
		public Alternatives getAlternatives() { return cAlternatives; }

		//processaInfo="processaInfo();"
		public Assignment getProcessaInfoAssignment_0() { return cProcessaInfoAssignment_0; }

		//"processaInfo();"
		public Keyword getProcessaInfoProcessaInfoKeyword_0_0() { return cProcessaInfoProcessaInfoKeyword_0_0; }

		//processaImagem="processaImagem();"
		public Assignment getProcessaImagemAssignment_1() { return cProcessaImagemAssignment_1; }

		//"processaImagem();"
		public Keyword getProcessaImagemProcessaImagemKeyword_1_0() { return cProcessaImagemProcessaImagemKeyword_1_0; }
	}

	public class AcaoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "acao");
		private final RuleCall cAndarParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//// ******************************************* /
		//// ***MAIN->COMPORTAMENTO******************** /
		//// ***************************************** /
		//acao:
		//	andar;
		public ParserRule getRule() { return rule; }

		//andar
		public RuleCall getAndarParserRuleCall() { return cAndarParserRuleCall; }
	}

	public class ComportamentoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "comportamento");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cDefineRegraAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final Keyword cDefineRegraDefineRegraKeyword_0_0 = (Keyword)cDefineRegraAssignment_0.eContents().get(0);
		private final Assignment cDefineRegraSeguirAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final Keyword cDefineRegraSeguirDefineRegraSeguirKeyword_1_0 = (Keyword)cDefineRegraSeguirAssignment_1.eContents().get(0);
		private final Assignment cDefineRegraNaoBaterAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final Keyword cDefineRegraNaoBaterDefineRegraNaoBaterKeyword_2_0 = (Keyword)cDefineRegraNaoBaterAssignment_2.eContents().get(0);
		private final Assignment cDefineRegraSeguirMultiplasCoordenadasAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final Keyword cDefineRegraSeguirMultiplasCoordenadasDefineRegraSeguirMultiplasCoordenadasKeyword_3_0 = (Keyword)cDefineRegraSeguirMultiplasCoordenadasAssignment_3.eContents().get(0);
		
		//comportamento:
		//	defineRegra="defineRegra();" | defineRegraSeguir="defineRegraSeguir();" | defineRegraNaoBater="defineRegraNaoBater();"
		//	| defineRegraSeguirMultiplasCoordenadas="defineRegraSeguirMultiplasCoordenadas();";
		public ParserRule getRule() { return rule; }

		//defineRegra="defineRegra();" | defineRegraSeguir="defineRegraSeguir();" | defineRegraNaoBater="defineRegraNaoBater();" |
		//defineRegraSeguirMultiplasCoordenadas="defineRegraSeguirMultiplasCoordenadas();"
		public Alternatives getAlternatives() { return cAlternatives; }

		//defineRegra="defineRegra();"
		public Assignment getDefineRegraAssignment_0() { return cDefineRegraAssignment_0; }

		//"defineRegra();"
		public Keyword getDefineRegraDefineRegraKeyword_0_0() { return cDefineRegraDefineRegraKeyword_0_0; }

		//defineRegraSeguir="defineRegraSeguir();"
		public Assignment getDefineRegraSeguirAssignment_1() { return cDefineRegraSeguirAssignment_1; }

		//"defineRegraSeguir();"
		public Keyword getDefineRegraSeguirDefineRegraSeguirKeyword_1_0() { return cDefineRegraSeguirDefineRegraSeguirKeyword_1_0; }

		//defineRegraNaoBater="defineRegraNaoBater();"
		public Assignment getDefineRegraNaoBaterAssignment_2() { return cDefineRegraNaoBaterAssignment_2; }

		//"defineRegraNaoBater();"
		public Keyword getDefineRegraNaoBaterDefineRegraNaoBaterKeyword_2_0() { return cDefineRegraNaoBaterDefineRegraNaoBaterKeyword_2_0; }

		//defineRegraSeguirMultiplasCoordenadas="defineRegraSeguirMultiplasCoordenadas();"
		public Assignment getDefineRegraSeguirMultiplasCoordenadasAssignment_3() { return cDefineRegraSeguirMultiplasCoordenadasAssignment_3; }

		//"defineRegraSeguirMultiplasCoordenadas();"
		public Keyword getDefineRegraSeguirMultiplasCoordenadasDefineRegraSeguirMultiplasCoordenadasKeyword_3_0() { return cDefineRegraSeguirMultiplasCoordenadasDefineRegraSeguirMultiplasCoordenadasKeyword_3_0; }
	}

	public class AndarElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "andar");
		private final Assignment cAndarAssignment = (Assignment)rule.eContents().get(1);
		private final Keyword cAndarAndarKeyword_0 = (Keyword)cAndarAssignment.eContents().get(0);
		
		//// ******************************************* /
		//// ***MAIN->ACAO***************************** /
		//// ***************************************** /
		/// *ID: 'a'..'z' + ;
		//WS: (' ' |'\n' |'\r' | '\t' )+ {skip();} ; // ignore whitespace
		// * /andar:
		//	andar="andar();";
		public ParserRule getRule() { return rule; }

		//andar="andar();"
		public Assignment getAndarAssignment() { return cAndarAssignment; }

		//"andar();"
		public Keyword getAndarAndarKeyword_0() { return cAndarAndarKeyword_0; }
	}
	
	
	private ModeloRoboElements pModeloRobo;
	private PlataformaElements pPlataforma;
	private NomeDaPlataformaElements pNomeDaPlataforma;
	private CabecalhoElements pCabecalho;
	private PacoteElements pPacote;
	private SensorElements pSensor;
	private TipoSensorElements pTipoSensor;
	private MainElements pMain;
	private LoopElements pLoop;
	private WhileElements pWhile;
	private InicializacaoSensorElements pInicializacaoSensor;
	private EntradaElements pEntrada;
	private ProcessamentoElements pProcessamento;
	private AcaoElements pAcao;
	private ComportamentoElements pComportamento;
	private AndarElements pAndar;
	
	private final GrammarProvider grammarProvider;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public MultiplosdestinosGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammarProvider = grammarProvider;
		this.gaTerminals = gaTerminals;
	}
	
	public Grammar getGrammar() {	
		return grammarProvider.getGrammar(this);
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//ModeloRobo:
	//	plataforma+=Plataforma "robo" name=ID cabecalho+=Cabecalho* pacote+=Pacote* sensor+=Sensor* main+=Main;
	public ModeloRoboElements getModeloRoboAccess() {
		return (pModeloRobo != null) ? pModeloRobo : (pModeloRobo = new ModeloRoboElements());
	}
	
	public ParserRule getModeloRoboRule() {
		return getModeloRoboAccess().getRule();
	}

	//Plataforma:
	//	"plataforma" nomeDaPlataforma;
	public PlataformaElements getPlataformaAccess() {
		return (pPlataforma != null) ? pPlataforma : (pPlataforma = new PlataformaElements());
	}
	
	public ParserRule getPlataformaRule() {
		return getPlataformaAccess().getRule();
	}

	//nomeDaPlataforma:
	//	plat=("pionner" | "srv" | "golfe");
	public NomeDaPlataformaElements getNomeDaPlataformaAccess() {
		return (pNomeDaPlataforma != null) ? pNomeDaPlataforma : (pNomeDaPlataforma = new NomeDaPlataformaElements());
	}
	
	public ParserRule getNomeDaPlataformaRule() {
		return getNomeDaPlataformaAccess().getRule();
	}

	//Cabecalho:
	//	"adicionar" itensCabecalho=("defines" | "includes");
	public CabecalhoElements getCabecalhoAccess() {
		return (pCabecalho != null) ? pCabecalho : (pCabecalho = new CabecalhoElements());
	}
	
	public ParserRule getCabecalhoRule() {
		return getCabecalhoAccess().getRule();
	}

	//Pacote:
	//	"importar pacote" tipo=("player;" | "localizacao;");
	public PacoteElements getPacoteAccess() {
		return (pPacote != null) ? pPacote : (pPacote = new PacoteElements());
	}
	
	public ParserRule getPacoteRule() {
		return getPacoteAccess().getRule();
	}

	//Sensor:
	//	"criarSensor" tipoSensor=TipoSensor;
	public SensorElements getSensorAccess() {
		return (pSensor != null) ? pSensor : (pSensor = new SensorElements());
	}
	
	public ParserRule getSensorRule() {
		return getSensorAccess().getRule();
	}

	//TipoSensor returns ecore::EString:
	//	"gps" | "bussola" | "camera";
	public TipoSensorElements getTipoSensorAccess() {
		return (pTipoSensor != null) ? pTipoSensor : (pTipoSensor = new TipoSensorElements());
	}
	
	public ParserRule getTipoSensorRule() {
		return getTipoSensorAccess().getRule();
	}

	//Main:
	//	"int main()" "{" loop "}";
	public MainElements getMainAccess() {
		return (pMain != null) ? pMain : (pMain = new MainElements());
	}
	
	public ParserRule getMainRule() {
		return getMainAccess().getRule();
	}

	//loop:
	//	iniSensor+=inicializacaoSensor* w+=while (en+=entrada | proc+=processamento | comp+=comportamento | ac+=acao)* "}";
	public LoopElements getLoopAccess() {
		return (pLoop != null) ? pLoop : (pLoop = new LoopElements());
	}
	
	public ParserRule getLoopRule() {
		return getLoopAccess().getRule();
	}

	//while returns ecore::EString:
	//	"while" "(true)" "{";
	public WhileElements getWhileAccess() {
		return (pWhile != null) ? pWhile : (pWhile = new WhileElements());
	}
	
	public ParserRule getWhileRule() {
		return getWhileAccess().getRule();
	}

	//inicializacaoSensor:
	//	gpsLigar="gps.ligar();" //(WS)*
	//	| bussolaLigar="bussola.ligar();" | cameraLigar="camera.ligar();" |
	//	carregarListaCoordenadas="carregarListaCoordenadas();" | inicializarPlayer="inicializarPlayer();";
	public InicializacaoSensorElements getInicializacaoSensorAccess() {
		return (pInicializacaoSensor != null) ? pInicializacaoSensor : (pInicializacaoSensor = new InicializacaoSensorElements());
	}
	
	public ParserRule getInicializacaoSensorRule() {
		return getInicializacaoSensorAccess().getRule();
	}

	//// ******************************************* /
	//// ***MAIN->ENTRADA************************** /
	//// ***************************************** /
	//entrada:
	//	gpsLer="gps.ler();" | bussolaLer="bussola.ler();" | cameraLer="camera.ler();" |
	//	receberCoordenada="receberCoordenada();" | carregarListaCoordenadas="carregarListaCoordenadas();";
	public EntradaElements getEntradaAccess() {
		return (pEntrada != null) ? pEntrada : (pEntrada = new EntradaElements());
	}
	
	public ParserRule getEntradaRule() {
		return getEntradaAccess().getRule();
	}

	//// ******************************************* /
	//// ***MAIN->PROCESSAMENTO******************** /
	//// ***************************************** /
	//processamento:
	//	processaInfo="processaInfo();" | processaImagem="processaImagem();";
	public ProcessamentoElements getProcessamentoAccess() {
		return (pProcessamento != null) ? pProcessamento : (pProcessamento = new ProcessamentoElements());
	}
	
	public ParserRule getProcessamentoRule() {
		return getProcessamentoAccess().getRule();
	}

	//// ******************************************* /
	//// ***MAIN->COMPORTAMENTO******************** /
	//// ***************************************** /
	//acao:
	//	andar;
	public AcaoElements getAcaoAccess() {
		return (pAcao != null) ? pAcao : (pAcao = new AcaoElements());
	}
	
	public ParserRule getAcaoRule() {
		return getAcaoAccess().getRule();
	}

	//comportamento:
	//	defineRegra="defineRegra();" | defineRegraSeguir="defineRegraSeguir();" | defineRegraNaoBater="defineRegraNaoBater();"
	//	| defineRegraSeguirMultiplasCoordenadas="defineRegraSeguirMultiplasCoordenadas();";
	public ComportamentoElements getComportamentoAccess() {
		return (pComportamento != null) ? pComportamento : (pComportamento = new ComportamentoElements());
	}
	
	public ParserRule getComportamentoRule() {
		return getComportamentoAccess().getRule();
	}

	//// ******************************************* /
	//// ***MAIN->ACAO***************************** /
	//// ***************************************** /
	/// *ID: 'a'..'z' + ;
	//WS: (' ' |'\n' |'\r' | '\t' )+ {skip();} ; // ignore whitespace
	// * /andar:
	//	andar="andar();";
	public AndarElements getAndarAccess() {
		return (pAndar != null) ? pAndar : (pAndar = new AndarElements());
	}
	
	public ParserRule getAndarRule() {
		return getAndarAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" | "n" |
	//	"f" | "r" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
