/*
* generated by Xtext
*/
package org.xtext.lrm.parseTreeConstruction;

import org.eclipse.emf.ecore.*;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parsetree.reconstr.IEObjectConsumer;
import org.eclipse.xtext.parsetree.reconstr.impl.AbstractParseTreeConstructor;

import org.xtext.lrm.services.MultiplosdestinosGrammarAccess;

import com.google.inject.Inject;

@SuppressWarnings("all")
public class MultiplosdestinosParsetreeConstructor extends AbstractParseTreeConstructor {
		
	@Inject
	private MultiplosdestinosGrammarAccess grammarAccess;
	
	@Override
	protected AbstractToken getRootToken(IEObjectConsumer inst) {
		return new ThisRootNode(inst);	
	}
	
protected class ThisRootNode extends RootToken {
	public ThisRootNode(IEObjectConsumer inst) {
		super(inst);
	}
	
	@Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModeloRobo_Group(this, this, 0, inst);
			case 1: return new Plataforma_Group(this, this, 1, inst);
			case 2: return new NomeDaPlataforma_PlatAssignment(this, this, 2, inst);
			case 3: return new Cabecalho_Group(this, this, 3, inst);
			case 4: return new Pacote_Group(this, this, 4, inst);
			case 5: return new Sensor_Group(this, this, 5, inst);
			case 6: return new Main_Group(this, this, 6, inst);
			case 7: return new Loop_Group(this, this, 7, inst);
			case 8: return new InicializacaoSensor_Alternatives(this, this, 8, inst);
			case 9: return new Entrada_Alternatives(this, this, 9, inst);
			case 10: return new Processamento_Alternatives(this, this, 10, inst);
			case 11: return new Acao_AndarParserRuleCall(this, this, 11, inst);
			case 12: return new Comportamento_Alternatives(this, this, 12, inst);
			case 13: return new Andar_AndarAssignment(this, this, 13, inst);
			default: return null;
		}	
	}	
}
	

/************ begin Rule ModeloRobo ****************
 *
 * ModeloRobo:
 * 	plataforma+=Plataforma "robo" name=ID cabecalho+=Cabecalho* pacote+=Pacote* sensor+=Sensor* main+=Main;
 *
 **/

// plataforma+=Plataforma "robo" name=ID cabecalho+=Cabecalho* pacote+=Pacote* sensor+=Sensor* main+=Main
protected class ModeloRobo_Group extends GroupToken {
	
	public ModeloRobo_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getModeloRoboAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModeloRobo_MainAssignment_6(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getModeloRoboRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// plataforma+=Plataforma
protected class ModeloRobo_PlataformaAssignment_0 extends AssignmentToken  {
	
	public ModeloRobo_PlataformaAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModeloRoboAccess().getPlataformaAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Plataforma_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("plataforma",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("plataforma");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPlataformaRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getModeloRoboAccess().getPlataformaPlataformaParserRuleCall_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}

// "robo"
protected class ModeloRobo_RoboKeyword_1 extends KeywordToken  {
	
	public ModeloRobo_RoboKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getModeloRoboAccess().getRoboKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModeloRobo_PlataformaAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=ID
protected class ModeloRobo_NameAssignment_2 extends AssignmentToken  {
	
	public ModeloRobo_NameAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModeloRoboAccess().getNameAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModeloRobo_RoboKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getModeloRoboAccess().getNameIDTerminalRuleCall_2_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getModeloRoboAccess().getNameIDTerminalRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// cabecalho+=Cabecalho*
protected class ModeloRobo_CabecalhoAssignment_3 extends AssignmentToken  {
	
	public ModeloRobo_CabecalhoAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModeloRoboAccess().getCabecalhoAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Cabecalho_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("cabecalho",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("cabecalho");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getCabecalhoRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getModeloRoboAccess().getCabecalhoCabecalhoParserRuleCall_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ModeloRobo_CabecalhoAssignment_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ModeloRobo_NameAssignment_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// pacote+=Pacote*
protected class ModeloRobo_PacoteAssignment_4 extends AssignmentToken  {
	
	public ModeloRobo_PacoteAssignment_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModeloRoboAccess().getPacoteAssignment_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Pacote_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("pacote",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("pacote");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPacoteRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getModeloRoboAccess().getPacotePacoteParserRuleCall_4_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ModeloRobo_PacoteAssignment_4(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ModeloRobo_CabecalhoAssignment_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new ModeloRobo_NameAssignment_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// sensor+=Sensor*
protected class ModeloRobo_SensorAssignment_5 extends AssignmentToken  {
	
	public ModeloRobo_SensorAssignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModeloRoboAccess().getSensorAssignment_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Sensor_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("sensor",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("sensor");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSensorRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getModeloRoboAccess().getSensorSensorParserRuleCall_5_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ModeloRobo_SensorAssignment_5(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ModeloRobo_PacoteAssignment_4(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new ModeloRobo_CabecalhoAssignment_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 3: return new ModeloRobo_NameAssignment_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// main+=Main
protected class ModeloRobo_MainAssignment_6 extends AssignmentToken  {
	
	public ModeloRobo_MainAssignment_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModeloRoboAccess().getMainAssignment_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Main_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("main",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("main");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMainRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getModeloRoboAccess().getMainMainParserRuleCall_6_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ModeloRobo_SensorAssignment_5(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ModeloRobo_PacoteAssignment_4(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new ModeloRobo_CabecalhoAssignment_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 3: return new ModeloRobo_NameAssignment_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


/************ end Rule ModeloRobo ****************/


/************ begin Rule Plataforma ****************
 *
 * Plataforma:
 * 	"plataforma" nomeDaPlataforma;
 *
 **/

// "plataforma" nomeDaPlataforma
protected class Plataforma_Group extends GroupToken {
	
	public Plataforma_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPlataformaAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Plataforma_NomeDaPlataformaParserRuleCall_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getNomeDaPlataformaRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "plataforma"
protected class Plataforma_PlataformaKeyword_0 extends KeywordToken  {
	
	public Plataforma_PlataformaKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPlataformaAccess().getPlataformaKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// nomeDaPlataforma
protected class Plataforma_NomeDaPlataformaParserRuleCall_1 extends RuleCallToken {
	
	public Plataforma_NomeDaPlataformaParserRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPlataformaAccess().getNomeDaPlataformaParserRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NomeDaPlataforma_PlatAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(checkForRecursion(NomeDaPlataforma_PlatAssignment.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Plataforma_PlataformaKeyword_0(lastRuleCallOrigin, next, actIndex, inst);
			default: return null;
		}	
	}	
}


/************ end Rule Plataforma ****************/


/************ begin Rule nomeDaPlataforma ****************
 *
 * nomeDaPlataforma:
 * 	plat=("pionner" | "srv" | "golfe");
 *
 **/

// plat=("pionner" | "srv" | "golfe")
protected class NomeDaPlataforma_PlatAssignment extends AssignmentToken  {
	
	public NomeDaPlataforma_PlatAssignment(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getNomeDaPlataformaAccess().getPlatAssignment();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getNomeDaPlataformaRule().getType().getClassifier())
			return null;
		if((value = eObjectConsumer.getConsumable("plat",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("plat");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getNomeDaPlataformaAccess().getPlatPionnerKeyword_0_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getNomeDaPlataformaAccess().getPlatPionnerKeyword_0_0();
			return obj;
		}
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getNomeDaPlataformaAccess().getPlatSrvKeyword_0_1(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getNomeDaPlataformaAccess().getPlatSrvKeyword_0_1();
			return obj;
		}
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getNomeDaPlataformaAccess().getPlatGolfeKeyword_0_2(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getNomeDaPlataformaAccess().getPlatGolfeKeyword_0_2();
			return obj;
		}
		return null;
	}

}

/************ end Rule nomeDaPlataforma ****************/


/************ begin Rule Cabecalho ****************
 *
 * Cabecalho:
 * 	"adicionar" itensCabecalho=("defines" | "includes");
 *
 **/

// "adicionar" itensCabecalho=("defines" | "includes")
protected class Cabecalho_Group extends GroupToken {
	
	public Cabecalho_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getCabecalhoAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Cabecalho_ItensCabecalhoAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getCabecalhoRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "adicionar"
protected class Cabecalho_AdicionarKeyword_0 extends KeywordToken  {
	
	public Cabecalho_AdicionarKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCabecalhoAccess().getAdicionarKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// itensCabecalho=("defines" | "includes")
protected class Cabecalho_ItensCabecalhoAssignment_1 extends AssignmentToken  {
	
	public Cabecalho_ItensCabecalhoAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getCabecalhoAccess().getItensCabecalhoAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Cabecalho_AdicionarKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("itensCabecalho",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("itensCabecalho");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getCabecalhoAccess().getItensCabecalhoDefinesKeyword_1_0_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getCabecalhoAccess().getItensCabecalhoDefinesKeyword_1_0_0();
			return obj;
		}
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getCabecalhoAccess().getItensCabecalhoIncludesKeyword_1_0_1(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getCabecalhoAccess().getItensCabecalhoIncludesKeyword_1_0_1();
			return obj;
		}
		return null;
	}

}


/************ end Rule Cabecalho ****************/


/************ begin Rule Pacote ****************
 *
 * Pacote:
 * 	"importar pacote" tipo=("player;" | "localizacao;");
 *
 **/

// "importar pacote" tipo=("player;" | "localizacao;")
protected class Pacote_Group extends GroupToken {
	
	public Pacote_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPacoteAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Pacote_TipoAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getPacoteRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "importar pacote"
protected class Pacote_ImportarPacoteKeyword_0 extends KeywordToken  {
	
	public Pacote_ImportarPacoteKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPacoteAccess().getImportarPacoteKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// tipo=("player;" | "localizacao;")
protected class Pacote_TipoAssignment_1 extends AssignmentToken  {
	
	public Pacote_TipoAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPacoteAccess().getTipoAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Pacote_ImportarPacoteKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("tipo",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("tipo");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getPacoteAccess().getTipoPlayerKeyword_1_0_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getPacoteAccess().getTipoPlayerKeyword_1_0_0();
			return obj;
		}
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getPacoteAccess().getTipoLocalizacaoKeyword_1_0_1(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getPacoteAccess().getTipoLocalizacaoKeyword_1_0_1();
			return obj;
		}
		return null;
	}

}


/************ end Rule Pacote ****************/


/************ begin Rule Sensor ****************
 *
 * Sensor:
 * 	"criarSensor" tipoSensor=TipoSensor;
 *
 **/

// "criarSensor" tipoSensor=TipoSensor
protected class Sensor_Group extends GroupToken {
	
	public Sensor_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSensorAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Sensor_TipoSensorAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSensorRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "criarSensor"
protected class Sensor_CriarSensorKeyword_0 extends KeywordToken  {
	
	public Sensor_CriarSensorKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSensorAccess().getCriarSensorKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// tipoSensor=TipoSensor
protected class Sensor_TipoSensorAssignment_1 extends AssignmentToken  {
	
	public Sensor_TipoSensorAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSensorAccess().getTipoSensorAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Sensor_CriarSensorKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("tipoSensor",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("tipoSensor");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSensorAccess().getTipoSensorTipoSensorParserRuleCall_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getSensorAccess().getTipoSensorTipoSensorParserRuleCall_1_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule Sensor ****************/



/************ begin Rule Main ****************
 *
 * Main:
 * 	"int main()" "{" loop "}";
 *
 **/

// "int main()" "{" loop "}"
protected class Main_Group extends GroupToken {
	
	public Main_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMainAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Main_RightCurlyBracketKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getLoopRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "int main()"
protected class Main_IntMainKeyword_0 extends KeywordToken  {
	
	public Main_IntMainKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMainAccess().getIntMainKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// "{"
protected class Main_LeftCurlyBracketKeyword_1 extends KeywordToken  {
	
	public Main_LeftCurlyBracketKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMainAccess().getLeftCurlyBracketKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Main_IntMainKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// loop
protected class Main_LoopParserRuleCall_2 extends RuleCallToken {
	
	public Main_LoopParserRuleCall_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMainAccess().getLoopParserRuleCall_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Loop_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(checkForRecursion(Loop_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Main_LeftCurlyBracketKeyword_1(lastRuleCallOrigin, next, actIndex, inst);
			default: return null;
		}	
	}	
}

// "}"
protected class Main_RightCurlyBracketKeyword_3 extends KeywordToken  {
	
	public Main_RightCurlyBracketKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMainAccess().getRightCurlyBracketKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Main_LoopParserRuleCall_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule Main ****************/


/************ begin Rule loop ****************
 *
 * loop:
 * 	iniSensor+=inicializacaoSensor* w+=while (en+=entrada | proc+=processamento | comp+=comportamento | ac+=acao)* "}";
 *
 **/

// iniSensor+=inicializacaoSensor* w+=while (en+=entrada | proc+=processamento | comp+=comportamento | ac+=acao)* "}"
protected class Loop_Group extends GroupToken {
	
	public Loop_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getLoopAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Loop_RightCurlyBracketKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getLoopRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// iniSensor+=inicializacaoSensor*
protected class Loop_IniSensorAssignment_0 extends AssignmentToken  {
	
	public Loop_IniSensorAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLoopAccess().getIniSensorAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new InicializacaoSensor_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("iniSensor",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("iniSensor");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getInicializacaoSensorRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getLoopAccess().getIniSensorInicializacaoSensorParserRuleCall_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Loop_IniSensorAssignment_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index - 1, consumed);
		}	
	}	
}

// w+=while
protected class Loop_WAssignment_1 extends AssignmentToken  {
	
	public Loop_WAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLoopAccess().getWAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Loop_IniSensorAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index - 1, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("w",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("w");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getLoopAccess().getWWhileParserRuleCall_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getLoopAccess().getWWhileParserRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// (en+=entrada | proc+=processamento | comp+=comportamento | ac+=acao)*
protected class Loop_Alternatives_2 extends AlternativesToken {

	public Loop_Alternatives_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getLoopAccess().getAlternatives_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Loop_EnAssignment_2_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Loop_ProcAssignment_2_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Loop_CompAssignment_2_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Loop_AcAssignment_2_3(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// en+=entrada
protected class Loop_EnAssignment_2_0 extends AssignmentToken  {
	
	public Loop_EnAssignment_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLoopAccess().getEnAssignment_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Entrada_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("en",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("en");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getEntradaRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getLoopAccess().getEnEntradaParserRuleCall_2_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Loop_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Loop_WAssignment_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// proc+=processamento
protected class Loop_ProcAssignment_2_1 extends AssignmentToken  {
	
	public Loop_ProcAssignment_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLoopAccess().getProcAssignment_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Processamento_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("proc",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("proc");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getProcessamentoRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getLoopAccess().getProcProcessamentoParserRuleCall_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Loop_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Loop_WAssignment_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// comp+=comportamento
protected class Loop_CompAssignment_2_2 extends AssignmentToken  {
	
	public Loop_CompAssignment_2_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLoopAccess().getCompAssignment_2_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Comportamento_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("comp",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("comp");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getComportamentoRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getLoopAccess().getCompComportamentoParserRuleCall_2_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Loop_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Loop_WAssignment_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ac+=acao
protected class Loop_AcAssignment_2_3 extends AssignmentToken  {
	
	public Loop_AcAssignment_2_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLoopAccess().getAcAssignment_2_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Acao_AndarParserRuleCall(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ac",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ac");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAcaoRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getLoopAccess().getAcAcaoParserRuleCall_2_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Loop_Alternatives_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Loop_WAssignment_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "}"
protected class Loop_RightCurlyBracketKeyword_3 extends KeywordToken  {
	
	public Loop_RightCurlyBracketKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getLoopAccess().getRightCurlyBracketKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Loop_Alternatives_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Loop_WAssignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


/************ end Rule loop ****************/



/************ begin Rule inicializacaoSensor ****************
 *
 * inicializacaoSensor:
 * 	gpsLigar="gps.ligar();" //(WS)*
 * 	| bussolaLigar="bussola.ligar();" | cameraLigar="camera.ligar();" |
 * 	carregarListaCoordenadas="carregarListaCoordenadas();" | inicializarPlayer="inicializarPlayer();";
 *
 **/

// gpsLigar="gps.ligar();" //(WS)*
// | bussolaLigar="bussola.ligar();" | cameraLigar="camera.ligar();" |
// carregarListaCoordenadas="carregarListaCoordenadas();" | inicializarPlayer="inicializarPlayer();"
protected class InicializacaoSensor_Alternatives extends AlternativesToken {

	public InicializacaoSensor_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getInicializacaoSensorAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new InicializacaoSensor_GpsLigarAssignment_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new InicializacaoSensor_BussolaLigarAssignment_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new InicializacaoSensor_CameraLigarAssignment_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new InicializacaoSensor_CarregarListaCoordenadasAssignment_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new InicializacaoSensor_InicializarPlayerAssignment_4(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getInicializacaoSensorRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// gpsLigar="gps.ligar();"
protected class InicializacaoSensor_GpsLigarAssignment_0 extends AssignmentToken  {
	
	public InicializacaoSensor_GpsLigarAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getInicializacaoSensorAccess().getGpsLigarAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("gpsLigar",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("gpsLigar");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getInicializacaoSensorAccess().getGpsLigarGpsLigarKeyword_0_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getInicializacaoSensorAccess().getGpsLigarGpsLigarKeyword_0_0();
			return obj;
		}
		return null;
	}

}

// bussolaLigar="bussola.ligar();"
protected class InicializacaoSensor_BussolaLigarAssignment_1 extends AssignmentToken  {
	
	public InicializacaoSensor_BussolaLigarAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getInicializacaoSensorAccess().getBussolaLigarAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("bussolaLigar",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("bussolaLigar");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getInicializacaoSensorAccess().getBussolaLigarBussolaLigarKeyword_1_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getInicializacaoSensorAccess().getBussolaLigarBussolaLigarKeyword_1_0();
			return obj;
		}
		return null;
	}

}

// cameraLigar="camera.ligar();"
protected class InicializacaoSensor_CameraLigarAssignment_2 extends AssignmentToken  {
	
	public InicializacaoSensor_CameraLigarAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getInicializacaoSensorAccess().getCameraLigarAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("cameraLigar",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("cameraLigar");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getInicializacaoSensorAccess().getCameraLigarCameraLigarKeyword_2_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getInicializacaoSensorAccess().getCameraLigarCameraLigarKeyword_2_0();
			return obj;
		}
		return null;
	}

}

// carregarListaCoordenadas="carregarListaCoordenadas();"
protected class InicializacaoSensor_CarregarListaCoordenadasAssignment_3 extends AssignmentToken  {
	
	public InicializacaoSensor_CarregarListaCoordenadasAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getInicializacaoSensorAccess().getCarregarListaCoordenadasAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("carregarListaCoordenadas",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("carregarListaCoordenadas");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getInicializacaoSensorAccess().getCarregarListaCoordenadasCarregarListaCoordenadasKeyword_3_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getInicializacaoSensorAccess().getCarregarListaCoordenadasCarregarListaCoordenadasKeyword_3_0();
			return obj;
		}
		return null;
	}

}

// inicializarPlayer="inicializarPlayer();"
protected class InicializacaoSensor_InicializarPlayerAssignment_4 extends AssignmentToken  {
	
	public InicializacaoSensor_InicializarPlayerAssignment_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getInicializacaoSensorAccess().getInicializarPlayerAssignment_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("inicializarPlayer",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("inicializarPlayer");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getInicializacaoSensorAccess().getInicializarPlayerInicializarPlayerKeyword_4_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getInicializacaoSensorAccess().getInicializarPlayerInicializarPlayerKeyword_4_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule inicializacaoSensor ****************/


/************ begin Rule entrada ****************
 *
 * // ******************************************* /
 * // ***MAIN->ENTRADA************************** /
 * // ***************************************** /
 * entrada:
 * 	gpsLer="gps.ler();" | bussolaLer="bussola.ler();" | cameraLer="camera.ler();" |
 * 	receberCoordenada="receberCoordenada();" | carregarListaCoordenadas="carregarListaCoordenadas();";
 *
 **/

// gpsLer="gps.ler();" | bussolaLer="bussola.ler();" | cameraLer="camera.ler();" | receberCoordenada="receberCoordenada();"
// | carregarListaCoordenadas="carregarListaCoordenadas();"
protected class Entrada_Alternatives extends AlternativesToken {

	public Entrada_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getEntradaAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Entrada_GpsLerAssignment_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Entrada_BussolaLerAssignment_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Entrada_CameraLerAssignment_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Entrada_ReceberCoordenadaAssignment_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Entrada_CarregarListaCoordenadasAssignment_4(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getEntradaRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// gpsLer="gps.ler();"
protected class Entrada_GpsLerAssignment_0 extends AssignmentToken  {
	
	public Entrada_GpsLerAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEntradaAccess().getGpsLerAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("gpsLer",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("gpsLer");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getEntradaAccess().getGpsLerGpsLerKeyword_0_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getEntradaAccess().getGpsLerGpsLerKeyword_0_0();
			return obj;
		}
		return null;
	}

}

// bussolaLer="bussola.ler();"
protected class Entrada_BussolaLerAssignment_1 extends AssignmentToken  {
	
	public Entrada_BussolaLerAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEntradaAccess().getBussolaLerAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("bussolaLer",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("bussolaLer");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getEntradaAccess().getBussolaLerBussolaLerKeyword_1_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getEntradaAccess().getBussolaLerBussolaLerKeyword_1_0();
			return obj;
		}
		return null;
	}

}

// cameraLer="camera.ler();"
protected class Entrada_CameraLerAssignment_2 extends AssignmentToken  {
	
	public Entrada_CameraLerAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEntradaAccess().getCameraLerAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("cameraLer",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("cameraLer");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getEntradaAccess().getCameraLerCameraLerKeyword_2_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getEntradaAccess().getCameraLerCameraLerKeyword_2_0();
			return obj;
		}
		return null;
	}

}

// receberCoordenada="receberCoordenada();"
protected class Entrada_ReceberCoordenadaAssignment_3 extends AssignmentToken  {
	
	public Entrada_ReceberCoordenadaAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEntradaAccess().getReceberCoordenadaAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("receberCoordenada",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("receberCoordenada");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getEntradaAccess().getReceberCoordenadaReceberCoordenadaKeyword_3_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getEntradaAccess().getReceberCoordenadaReceberCoordenadaKeyword_3_0();
			return obj;
		}
		return null;
	}

}

// carregarListaCoordenadas="carregarListaCoordenadas();"
protected class Entrada_CarregarListaCoordenadasAssignment_4 extends AssignmentToken  {
	
	public Entrada_CarregarListaCoordenadasAssignment_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEntradaAccess().getCarregarListaCoordenadasAssignment_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("carregarListaCoordenadas",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("carregarListaCoordenadas");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getEntradaAccess().getCarregarListaCoordenadasCarregarListaCoordenadasKeyword_4_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getEntradaAccess().getCarregarListaCoordenadasCarregarListaCoordenadasKeyword_4_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule entrada ****************/


/************ begin Rule processamento ****************
 *
 * // ******************************************* /
 * // ***MAIN->PROCESSAMENTO******************** /
 * // ***************************************** /
 * processamento:
 * 	processaInfo="processaInfo();" | processaImagem="processaImagem();";
 *
 **/

// processaInfo="processaInfo();" | processaImagem="processaImagem();"
protected class Processamento_Alternatives extends AlternativesToken {

	public Processamento_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getProcessamentoAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Processamento_ProcessaInfoAssignment_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Processamento_ProcessaImagemAssignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getProcessamentoRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// processaInfo="processaInfo();"
protected class Processamento_ProcessaInfoAssignment_0 extends AssignmentToken  {
	
	public Processamento_ProcessaInfoAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessamentoAccess().getProcessaInfoAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("processaInfo",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("processaInfo");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getProcessamentoAccess().getProcessaInfoProcessaInfoKeyword_0_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getProcessamentoAccess().getProcessaInfoProcessaInfoKeyword_0_0();
			return obj;
		}
		return null;
	}

}

// processaImagem="processaImagem();"
protected class Processamento_ProcessaImagemAssignment_1 extends AssignmentToken  {
	
	public Processamento_ProcessaImagemAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessamentoAccess().getProcessaImagemAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("processaImagem",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("processaImagem");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getProcessamentoAccess().getProcessaImagemProcessaImagemKeyword_1_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getProcessamentoAccess().getProcessaImagemProcessaImagemKeyword_1_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule processamento ****************/


/************ begin Rule acao ****************
 *
 * // ******************************************* /
 * // ***MAIN->COMPORTAMENTO******************** /
 * // ***************************************** /
 * acao:
 * 	andar;
 *
 **/

// andar
protected class Acao_AndarParserRuleCall extends RuleCallToken {
	
	public Acao_AndarParserRuleCall(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getAcaoAccess().getAndarParserRuleCall();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Andar_AndarAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getAndarRule().getType().getClassifier())
			return null;
		if(checkForRecursion(Andar_AndarAssignment.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

/************ end Rule acao ****************/


/************ begin Rule comportamento ****************
 *
 * comportamento:
 * 	defineRegra="defineRegra();" | defineRegraSeguir="defineRegraSeguir();" | defineRegraNaoBater="defineRegraNaoBater();"
 * 	| defineRegraSeguirMultiplasCoordenadas="defineRegraSeguirMultiplasCoordenadas();";
 *
 **/

// defineRegra="defineRegra();" | defineRegraSeguir="defineRegraSeguir();" | defineRegraNaoBater="defineRegraNaoBater();" |
// defineRegraSeguirMultiplasCoordenadas="defineRegraSeguirMultiplasCoordenadas();"
protected class Comportamento_Alternatives extends AlternativesToken {

	public Comportamento_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getComportamentoAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Comportamento_DefineRegraAssignment_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Comportamento_DefineRegraSeguirAssignment_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Comportamento_DefineRegraNaoBaterAssignment_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Comportamento_DefineRegraSeguirMultiplasCoordenadasAssignment_3(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getComportamentoRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// defineRegra="defineRegra();"
protected class Comportamento_DefineRegraAssignment_0 extends AssignmentToken  {
	
	public Comportamento_DefineRegraAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getComportamentoAccess().getDefineRegraAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("defineRegra",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("defineRegra");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getComportamentoAccess().getDefineRegraDefineRegraKeyword_0_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getComportamentoAccess().getDefineRegraDefineRegraKeyword_0_0();
			return obj;
		}
		return null;
	}

}

// defineRegraSeguir="defineRegraSeguir();"
protected class Comportamento_DefineRegraSeguirAssignment_1 extends AssignmentToken  {
	
	public Comportamento_DefineRegraSeguirAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getComportamentoAccess().getDefineRegraSeguirAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("defineRegraSeguir",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("defineRegraSeguir");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getComportamentoAccess().getDefineRegraSeguirDefineRegraSeguirKeyword_1_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getComportamentoAccess().getDefineRegraSeguirDefineRegraSeguirKeyword_1_0();
			return obj;
		}
		return null;
	}

}

// defineRegraNaoBater="defineRegraNaoBater();"
protected class Comportamento_DefineRegraNaoBaterAssignment_2 extends AssignmentToken  {
	
	public Comportamento_DefineRegraNaoBaterAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getComportamentoAccess().getDefineRegraNaoBaterAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("defineRegraNaoBater",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("defineRegraNaoBater");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getComportamentoAccess().getDefineRegraNaoBaterDefineRegraNaoBaterKeyword_2_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getComportamentoAccess().getDefineRegraNaoBaterDefineRegraNaoBaterKeyword_2_0();
			return obj;
		}
		return null;
	}

}

// defineRegraSeguirMultiplasCoordenadas="defineRegraSeguirMultiplasCoordenadas();"
protected class Comportamento_DefineRegraSeguirMultiplasCoordenadasAssignment_3 extends AssignmentToken  {
	
	public Comportamento_DefineRegraSeguirMultiplasCoordenadasAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getComportamentoAccess().getDefineRegraSeguirMultiplasCoordenadasAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("defineRegraSeguirMultiplasCoordenadas",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("defineRegraSeguirMultiplasCoordenadas");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getComportamentoAccess().getDefineRegraSeguirMultiplasCoordenadasDefineRegraSeguirMultiplasCoordenadasKeyword_3_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getComportamentoAccess().getDefineRegraSeguirMultiplasCoordenadasDefineRegraSeguirMultiplasCoordenadasKeyword_3_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule comportamento ****************/


/************ begin Rule andar ****************
 *
 * // ******************************************* /
 * // ***MAIN->ACAO***************************** /
 * // ***************************************** /
 * / *ID: 'a'..'z' + ;
 * WS: (' ' |'\n' |'\r' | '\t' )+ {skip();} ; // ignore whitespace
 * * /andar:
 * 	andar="andar();";
 *
 **/

// andar="andar();"
protected class Andar_AndarAssignment extends AssignmentToken  {
	
	public Andar_AndarAssignment(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAndarAccess().getAndarAssignment();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getAndarRule().getType().getClassifier())
			return null;
		if((value = eObjectConsumer.getConsumable("andar",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("andar");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getAndarAccess().getAndarAndarKeyword_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getAndarAccess().getAndarAndarKeyword_0();
			return obj;
		}
		return null;
	}

}

/************ end Rule andar ****************/

}
