/*
* generated by Xtext
*/
package org.xtext.lrm.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.xtext.lrm.services.MultiplosdestinosGrammarAccess;

public class MultiplosdestinosParser extends AbstractContentAssistParser {
	
	@Inject
	private MultiplosdestinosGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.xtext.lrm.ui.contentassist.antlr.internal.InternalMultiplosdestinosParser createParser() {
		org.xtext.lrm.ui.contentassist.antlr.internal.InternalMultiplosdestinosParser result = new org.xtext.lrm.ui.contentassist.antlr.internal.InternalMultiplosdestinosParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getNomeDaPlataformaAccess().getPlatAlternatives_0(), "rule__NomeDaPlataforma__PlatAlternatives_0");
					put(grammarAccess.getCabecalhoAccess().getItensCabecalhoAlternatives_1_0(), "rule__Cabecalho__ItensCabecalhoAlternatives_1_0");
					put(grammarAccess.getPacoteAccess().getTipoAlternatives_1_0(), "rule__Pacote__TipoAlternatives_1_0");
					put(grammarAccess.getTipoSensorAccess().getAlternatives(), "rule__TipoSensor__Alternatives");
					put(grammarAccess.getLoopAccess().getAlternatives_2(), "rule__Loop__Alternatives_2");
					put(grammarAccess.getInicializacaoSensorAccess().getAlternatives(), "rule__InicializacaoSensor__Alternatives");
					put(grammarAccess.getEntradaAccess().getAlternatives(), "rule__Entrada__Alternatives");
					put(grammarAccess.getProcessamentoAccess().getAlternatives(), "rule__Processamento__Alternatives");
					put(grammarAccess.getComportamentoAccess().getAlternatives(), "rule__Comportamento__Alternatives");
					put(grammarAccess.getModeloRoboAccess().getGroup(), "rule__ModeloRobo__Group__0");
					put(grammarAccess.getPlataformaAccess().getGroup(), "rule__Plataforma__Group__0");
					put(grammarAccess.getCabecalhoAccess().getGroup(), "rule__Cabecalho__Group__0");
					put(grammarAccess.getPacoteAccess().getGroup(), "rule__Pacote__Group__0");
					put(grammarAccess.getSensorAccess().getGroup(), "rule__Sensor__Group__0");
					put(grammarAccess.getMainAccess().getGroup(), "rule__Main__Group__0");
					put(grammarAccess.getLoopAccess().getGroup(), "rule__Loop__Group__0");
					put(grammarAccess.getWhileAccess().getGroup(), "rule__While__Group__0");
					put(grammarAccess.getModeloRoboAccess().getPlataformaAssignment_0(), "rule__ModeloRobo__PlataformaAssignment_0");
					put(grammarAccess.getModeloRoboAccess().getNameAssignment_2(), "rule__ModeloRobo__NameAssignment_2");
					put(grammarAccess.getModeloRoboAccess().getCabecalhoAssignment_3(), "rule__ModeloRobo__CabecalhoAssignment_3");
					put(grammarAccess.getModeloRoboAccess().getPacoteAssignment_4(), "rule__ModeloRobo__PacoteAssignment_4");
					put(grammarAccess.getModeloRoboAccess().getSensorAssignment_5(), "rule__ModeloRobo__SensorAssignment_5");
					put(grammarAccess.getModeloRoboAccess().getMainAssignment_6(), "rule__ModeloRobo__MainAssignment_6");
					put(grammarAccess.getNomeDaPlataformaAccess().getPlatAssignment(), "rule__NomeDaPlataforma__PlatAssignment");
					put(grammarAccess.getCabecalhoAccess().getItensCabecalhoAssignment_1(), "rule__Cabecalho__ItensCabecalhoAssignment_1");
					put(grammarAccess.getPacoteAccess().getTipoAssignment_1(), "rule__Pacote__TipoAssignment_1");
					put(grammarAccess.getSensorAccess().getTipoSensorAssignment_1(), "rule__Sensor__TipoSensorAssignment_1");
					put(grammarAccess.getLoopAccess().getIniSensorAssignment_0(), "rule__Loop__IniSensorAssignment_0");
					put(grammarAccess.getLoopAccess().getWAssignment_1(), "rule__Loop__WAssignment_1");
					put(grammarAccess.getLoopAccess().getEnAssignment_2_0(), "rule__Loop__EnAssignment_2_0");
					put(grammarAccess.getLoopAccess().getProcAssignment_2_1(), "rule__Loop__ProcAssignment_2_1");
					put(grammarAccess.getLoopAccess().getCompAssignment_2_2(), "rule__Loop__CompAssignment_2_2");
					put(grammarAccess.getLoopAccess().getAcAssignment_2_3(), "rule__Loop__AcAssignment_2_3");
					put(grammarAccess.getInicializacaoSensorAccess().getGpsLigarAssignment_0(), "rule__InicializacaoSensor__GpsLigarAssignment_0");
					put(grammarAccess.getInicializacaoSensorAccess().getBussolaLigarAssignment_1(), "rule__InicializacaoSensor__BussolaLigarAssignment_1");
					put(grammarAccess.getInicializacaoSensorAccess().getCameraLigarAssignment_2(), "rule__InicializacaoSensor__CameraLigarAssignment_2");
					put(grammarAccess.getInicializacaoSensorAccess().getCarregarListaCoordenadasAssignment_3(), "rule__InicializacaoSensor__CarregarListaCoordenadasAssignment_3");
					put(grammarAccess.getInicializacaoSensorAccess().getInicializarPlayerAssignment_4(), "rule__InicializacaoSensor__InicializarPlayerAssignment_4");
					put(grammarAccess.getEntradaAccess().getGpsLerAssignment_0(), "rule__Entrada__GpsLerAssignment_0");
					put(grammarAccess.getEntradaAccess().getBussolaLerAssignment_1(), "rule__Entrada__BussolaLerAssignment_1");
					put(grammarAccess.getEntradaAccess().getCameraLerAssignment_2(), "rule__Entrada__CameraLerAssignment_2");
					put(grammarAccess.getEntradaAccess().getReceberCoordenadaAssignment_3(), "rule__Entrada__ReceberCoordenadaAssignment_3");
					put(grammarAccess.getEntradaAccess().getCarregarListaCoordenadasAssignment_4(), "rule__Entrada__CarregarListaCoordenadasAssignment_4");
					put(grammarAccess.getProcessamentoAccess().getProcessaInfoAssignment_0(), "rule__Processamento__ProcessaInfoAssignment_0");
					put(grammarAccess.getProcessamentoAccess().getProcessaImagemAssignment_1(), "rule__Processamento__ProcessaImagemAssignment_1");
					put(grammarAccess.getComportamentoAccess().getDefineRegraAssignment_0(), "rule__Comportamento__DefineRegraAssignment_0");
					put(grammarAccess.getComportamentoAccess().getDefineRegraSeguirAssignment_1(), "rule__Comportamento__DefineRegraSeguirAssignment_1");
					put(grammarAccess.getComportamentoAccess().getDefineRegraNaoBaterAssignment_2(), "rule__Comportamento__DefineRegraNaoBaterAssignment_2");
					put(grammarAccess.getComportamentoAccess().getDefineRegraSeguirMultiplasCoordenadasAssignment_3(), "rule__Comportamento__DefineRegraSeguirMultiplasCoordenadasAssignment_3");
					put(grammarAccess.getAndarAccess().getAndarAssignment(), "rule__Andar__AndarAssignment");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.xtext.lrm.ui.contentassist.antlr.internal.InternalMultiplosdestinosParser typedParser = (org.xtext.lrm.ui.contentassist.antlr.internal.InternalMultiplosdestinosParser) parser;
			typedParser.entryRuleModeloRobo();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public MultiplosdestinosGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(MultiplosdestinosGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
